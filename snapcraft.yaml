name: gnome-3-38-2004-sdk
version: git
summary: Shared GNOME 3.38 Ubuntu stack
description: |
 This snap contains only the necessary libraries required by
 GNOME applications.

confinement: strict
grade: stable
base: core20

parts:
  buildenv:
    plugin: nil
    build-environment: &buildenv
      - ACLOCAL_PATH: $SNAPCRAFT_STAGE/usr/share/aclocal
      - XDG_DATA_DIRS: $SNAPCRAFT_STAGE/usr/share:/usr/share:$XDG_DATA_DIRS
      - LD_LIBRARY_PATH: $SNAPCRAFT_STAGE/usr/lib/vala-0.48:$SNAPCRAFT_STAGE/usr/lib:$SNAPCRAFT_STAGE/usr/lib/$SNAPCRAFT_ARCH_TRIPLET:$LD_LIBRARY_PATH
      - GDK_PIXBUF_MODULE_FILE: $SNAPCRAFT_STAGE/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/gdk-pixbuf-2.0/2.10.0/loaders.cache
      - PKG_CONFIG_PATH: $SNAPCRAFT_STAGE/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/pkgconfig:$SNAPCRAFT_STAGE/usr/lib/pkgconfig:$SNAPCRAFT_STAGE/usr/share/pkgconfig:$PKG_CONFIG_PATH

  libtool:
    source: https://git.savannah.gnu.org/git/libtool.git
    plugin: autotools
    autotools-configure-parameters: [ --prefix=/usr ]
    build-environment: *buildenv
    build-packages:
      - help2man
      - texinfo
    override-stage: |
      set -eux
      snapcraftctl stage
      LIBTOOLIZE=usr/bin/libtoolize
      sed -i 's#pkgauxdir="#pkgauxdir="$SNAPCRAFT_STAGE#' $LIBTOOLIZE
      sed -i 's#pkgltdldir="#pkgltdldir="$SNAPCRAFT_STAGE#' $LIBTOOLIZE
      sed -i 's#aclocaldir="#aclocaldir="$SNAPCRAFT_STAGE#' $LIBTOOLIZE

  libffi:
    after: [ libtool ]
    source: https://gitlab.freedesktop.org/gstreamer/meson-ports/libffi.git
    source-branch: 'meson'
    source-depth: 1
    plugin: meson
    meson-parameters:
      - --prefix=/usr
      - -Ddebug=true
      - -Doptimization=3
    build-environment: *buildenv

  glib:
    after: [ libffi ]
    source: https://gitlab.gnome.org/GNOME/glib.git
    source-branch: 'glib-2-64'
    source-depth: 1
    plugin: meson
    meson-parameters:
      - --prefix=/usr
      - -Ddebug=true
      - -Doptimization=3
    build-environment: *buildenv
    build-environment:
      - CFLAGS: -Wno-nonnull
    override-pull: |
      set -eux
      snapcraftctl pull
      patch -p1 < $SNAPCRAFT_PROJECT_DIR/patches/check-for-snap-plugs-before-accessing-portals.patch
    override-build: |
      set -eux
      snapcraftctl build
      mkdir -p $SNAPCRAFT_PART_INSTALL/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/glib-2.0/
      cp $SNAPCRAFT_PART_INSTALL/usr/bin/{gio-querymodules,glib-compile-schemas} $SNAPCRAFT_PART_INSTALL/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/glib-2.0/
    build-packages:
      - pkg-config
      - libmount-dev
      - gcc
      - g++
      - clang
      - libffi-dev

  libportal:
    after: [ glib ]
    plugin: meson
    source: https://github.com/flatpak/libportal.git
    source-tag: '0.4'
    meson-parameters:
      - --prefix=/usr
      - -Dgtk_doc=false

  pixman:
    after: [ libportal ]
    source: https://gitlab.freedesktop.org/pixman/pixman.git
    source-tag: 'pixman-0.40.0'
    source-depth: 1
    plugin: meson
    meson-parameters:
      - --prefix=/usr
      - -Dgtk=disabled
    build-environment: *buildenv

  cairo:
    after: [ pixman ]
    source: git://anongit.freedesktop.org/git/cairo
    source-tag: '1.17.4'
    source-depth: 1
    plugin: meson
    meson-version: "0.54.0"
    meson-parameters:
      - --prefix=/usr
      - -Dxlib=enabled
      - -Dpng=enabled
      - -Dxcb=enabled
      - -Dtee=enabled
      - -Dzlib=enabled
      - -Dgl_backend=disabled
    build-environment: *buildenv
    build-packages:
      - libfontconfig1-dev
      - libfreetype6-dev
      - libx11-dev
      - libxext-dev
      - libxcb1-dev
      - libxcb-render0-dev
      - libxcb-shm0-dev
      - libsm-dev
      - zlib1g-dev
      - liblzo2-dev

  gobject-introspection:
    after: [ cairo ]
    source: https://gitlab.gnome.org/GNOME/gobject-introspection.git
    source-branch: 'gnome-3-38'
    source-depth: 1
    plugin: meson
    meson-version: "0.60.3"
    meson-parameters:
      - --prefix=/usr
      - -Ddebug=true
      - -Doptimization=3
    build-environment: *buildenv
    build-environment:
      - LD_LIBRARY_PATH: $SNAPCRAFT_STAGE/usr/lib/vala-0.48:$SNAPCRAFT_STAGE/usr/lib:$SNAPCRAFT_STAGE/usr/lib/$SNAPCRAFT_ARCH_TRIPLET
      - PKG_CONFIG_PATH: $SNAPCRAFT_STAGE/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/pkgconfig:$SNAPCRAFT_STAGE/usr/lib/pkgconfig:$SNAPCRAFT_STAGE/usr/share/pkgconfig
    override-build: |
      set -eux
      snapcraftctl build
      SCANNER=$SNAPCRAFT_PART_INSTALL/usr/bin/g-ir-scanner
      sed -i 's#/usr/lib#$SNAPCRAFT_STAGE/usr/lib#g' $SCANNER
      sed -i 's#/usr/share#$SNAPCRAFT_STAGE/usr/share#g' $SCANNER
    build-packages:
      - python3-dev
      - bison
      - flex

  vala:
    after: [ gobject-introspection ]
    source: https://gitlab.gnome.org/GNOME/vala.git
    source-branch: '0.48'
    plugin: autotools
    autotools-configure-parameters: [ --prefix=/usr ]
    build-environment: *buildenv
    build-packages:
      - autoconf-archive
      - valac
      - libgraphviz-dev

  gee: 
    after: [ vala ]
    source: https://gitlab.gnome.org/GNOME/libgee.git
    source-tag: '0.20.4'
    source-depth: 1
    plugin: autotools
    autotools-configure-parameters: [ --prefix=/usr ]
    build-environment: *buildenv
    override-build: |
      set -eux
      snapcraftctl build
      GIREPOSITORY_PATH=$SNAPCRAFT_PART_INSTALL/usr/lib/girepository-1.0
      mkdir -p $GIREPOSITORY_PATH
      cp gee/Gee-0.8.typelib $GIREPOSITORY_PATH/
      GIR_PATH=$SNAPCRAFT_PART_INSTALL/usr/share/gir-1.0
      mkdir -p $GIR_PATH
      cp gee/Gee-0.8.gir $GIR_PATH/
      #rm -r $SNAPCRAFT_PART_INSTALL/$(echo $SNAPCRAFT_STAGE | cut -d/ -f2)

  atk:
    after: [ gee ]
    source: https://gitlab.gnome.org/GNOME/atk.git
    source-branch: 'gnome-3-36'
    source-depth: 1
    plugin: meson
    meson-parameters:
      - --prefix=/usr
      - -Ddebug=true
      - -Doptimization=3
      - -Dintrospection=true
      - -Ddocs=false
    build-environment: *buildenv
    override-build: |
      set -eux
      snapcraftctl build
      PC=$SNAPCRAFT_PART_INSTALL/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/pkgconfig/atk.pc
      sed -i 's#exec_prefix=/usr#exec_prefix=${prefix}#' $PC
      sed -i 's#libdir=/usr/lib/$SNAPCRAFT_ARCH_TRIPLET#libdir=${prefix}/lib/$SNAPCRAFT_ARCH_TRIPLET#' $PC
      sed -i 's#includedir=/usr/include#includedir=${prefix}/include#' $PC

  at-spi2-core:
    after: [ atk ]
    source: https://gitlab.gnome.org/GNOME/at-spi2-core.git
    source-tag: 'AT_SPI2_CORE_2_34_0' 
    source-depth: 1
    plugin: meson
    meson-parameters:
      - --prefix=/usr
      - -Ddebug=true
      - -Doptimization=3
      - -Dintrospection=yes
      - -Ddocs=false
    build-environment: *buildenv
    build-packages:
      - libdbus-1-dev
      - libxtst-dev

  at-spi2-atk:
    after: [ at-spi2-core ]
    source: https://gitlab.gnome.org/GNOME/at-spi2-atk.git
    source-tag: 'AT_SPI2_ATK_2_34_1'
    source-depth: 1
    plugin: meson
    meson-parameters:
      - --prefix=/usr
      - -Ddebug=true
      - -Doptimization=3
    build-environment: *buildenv

  fribidi:
    after: [ at-spi2-atk ]
    source: https://github.com/fribidi/fribidi.git
    source-tag: 'v1.0.7'
    source-depth: 1
    plugin: meson
    meson-parameters:
      - --prefix=/usr
      - -Ddebug=true
      - -Doptimization=3
      - -Ddocs=false
    build-environment: *buildenv

  harfbuzz:
    after: [ fribidi ]
    source: https://github.com/harfbuzz/harfbuzz.git
    source-tag: '2.6.8'
    source-depth: 1
    plugin: autotools
    autotools-configure-parameters:
      - --prefix=/usr
      - --with-graphite2=yes
      - --enable-introspection
      - --with-gobject
      - --enable-static
    build-environment: *buildenv
    override-build: |
      set -eux
      snapcraftctl build
      PC=$SNAPCRAFT_PART_INSTALL/usr/lib/pkgconfig/harfbuzz.pc
      sed -i 's#exec_prefix=/usr#exec_prefix=${prefix}#' $PC
      sed -i 's#libdir=/usr#libdir=${prefix}#' $PC
      sed -i 's#includedir=/usr#includedir=${prefix}#' $PC
    build-packages:
      - ragel
      - libgraphite2-dev

  pango:
    after: [ harfbuzz ]
    source: https://gitlab.gnome.org/GNOME/pango.git
    source-tag: '1.48.0'
    source-depth: 1
    plugin: meson
    meson-version: "0.54.0"
    meson-parameters:
      - --prefix=/usr
      - -Ddebug=true
      - -Doptimization=3
      - -Dinstall-tests=false
      - -Dgtk_doc=false
      - -Dintrospection=enabled
    build-environment: *buildenv
    build-packages:
      - libthai-dev
      - libxft-dev
      - libxrender-dev
      - libxt-dev
      - cmake

  gdk-pixbuf:
    after: [ pango ]
    source: https://gitlab.gnome.org/GNOME/gdk-pixbuf.git
    source-branch: 'gdk-pixbuf-2-40'
    source-depth: 1
    plugin: meson
    meson-parameters:
     - --prefix=/usr
     - -Ddebug=true
     - -Doptimization=3
     - -Dinstalled_tests=false
    build-environment: *buildenv
    override-build: |
      set -eux
      snapcraftctl build
      cp $SNAPCRAFT_PART_INSTALL/usr/bin/gdk-pixbuf-query-loaders $SNAPCRAFT_STAGE/usr/bin/
      LOADERS_PATH=$SNAPCRAFT_PART_INSTALL/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/gdk-pixbuf-2.0/2.10.0/loaders
      $SNAPCRAFT_PART_INSTALL/usr/bin/gdk-pixbuf-query-loaders $LOADERS_PATH/*.so > $LOADERS_PATH.cache
    organize:
      usr/bin/gdk-pixbuf-query-loaders: usr/lib/$SNAPCRAFT_ARCH_TRIPLET/gdk-pixbuf-2.0/gdk-pixbuf-query-loaders
    build-packages:
      - libpng-dev
      - libjpeg-dev
      - libtiff-dev

  librsvg:
    after: [ gdk-pixbuf, vala ]
    source: https://gitlab.gnome.org/GNOME/librsvg.git
    source-branch: 'librsvg-2.50'
    source-depth: 1
    plugin: autotools
    autotools-configure-parameters:
      - --prefix=/usr
      - --enable-introspection
      - --enable-vala
    build-environment: *buildenv
    build-packages:
      - cargo
      - libcroco3-dev

  epoxy:
    after: [ librsvg ]
    source: https://github.com/anholt/libepoxy.git
    source-tag: '1.5.4'  # Note minor version of tag/branch can be even or odd and be stable
    source-depth: 1
    plugin: meson
    meson-parameters:
     - --prefix=/usr
     - -Ddebug=true
     - -Doptimization=3
    build-environment: *buildenv
    build-packages:
      - libgl1-mesa-dev
      - libegl1-mesa-dev
      - xutils-dev

  json-glib: 
    after: [ epoxy ]
    source: https://gitlab.gnome.org/GNOME/json-glib.git
    source-branch: 'json-glib-1-4'
    source-depth: 1
    plugin: meson
    meson-version: "0.54.0"
    meson-parameters:
      - --prefix=/usr
      - -Ddebug=true
      - -Doptimization=3
      - -Ddocs=false
      - -Dtests=false
    build-environment: *buildenv

  libpsl:
    after: [ json-glib ]
    source: https://github.com/rockdaboot/libpsl.git
    source-tag: 'libpsl-0.21.0'
    source-depth: 1
    plugin: autotools
    autotools-configure-parameters:
      - --prefix=/usr
      - --enable-runtime=libidn2
    build-environment: *buildenv
    build-packages:
      - libidn2-0-dev
      - libunistring-dev

  libsoup:
    after: [ libpsl ]
    source: https://gitlab.gnome.org/GNOME/libsoup.git
    source-branch: gnome-3-38
    source-depth: 1
    plugin: meson
    meson-parameters:
      - --prefix=/usr
      - -Ddebug=true
      - -Doptimization=3
      - -Dvapi=enabled
      - -Dtls_check=false #disable build time check, but we need to ensure glib-networking is available at runtime
    build-environment: *buildenv
    build-environment:
      - LD_LIBRARY_PATH: $SNAPCRAFT_STAGE/usr/lib/vala-0.48:$SNAPCRAFT_STAGE/usr/lib:$SNAPCRAFT_STAGE/usr/lib/$SNAPCRAFT_ARCH_TRIPLET
      - PKG_CONFIG_PATH: $SNAPCRAFT_STAGE/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/pkgconfig:$SNAPCRAFT_STAGE/usr/lib/pkgconfig:$SNAPCRAFT_STAGE/usr/share/pkgconfig
      - XDG_DATA_DIRS: $SNAPCRAFT_STAGE/usr/share:/usr/share:$XDG_DATA_DIRS
    build-packages:
      - libsqlite3-dev
      - libkrb5-dev
      - libbrotli-dev

  librest:
    after: [ libsoup ]
    source: https://gitlab.gnome.org/GNOME/librest.git
    source-branch: 'librest-0-7'  # looks like this branch has been updated more recently than the 0.8 tags - weird
    source-depth: 1
    plugin: autotools
    autotools-configure-parameters: [ --prefix=/usr ]
    build-environment: *buildenv
    build-packages:
      - gtk-doc-tools

  wayland:
    after: [ librest ]
    source: https://gitlab.freedesktop.org/wayland/wayland.git
    source-tag: '1.16.93'
    source-depth: 1
    plugin: autotools
    autotools-configure-parameters:
      - --prefix=/usr
      - --disable-documentation
    build-environment: *buildenv
    build-environment:
      - LD_LIBRARY_PATH: $SNAPCRAFT_STAGE/usr/lib/vala-0.48:$SNAPCRAFT_STAGE/usr/lib:$SNAPCRAFT_STAGE/usr/lib/$SNAPCRAFT_ARCH_TRIPLET
      - PKG_CONFIG_PATH: $SNAPCRAFT_STAGE/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/pkgconfig:$SNAPCRAFT_STAGE/usr/lib/pkgconfig:$SNAPCRAFT_STAGE/usr/share/pkgconfig

  wayland-protocols:
    after: [ wayland ]
    source: https://gitlab.freedesktop.org/wayland/wayland-protocols.git
    source-tag: '1.20'
    source-depth: 1
    plugin: autotools
    autotools-configure-parameters: [ --prefix=/usr ]
    build-environment: *buildenv

  gtk:
    after: [ wayland-protocols, wayland ]
    source: https://gitlab.gnome.org/GNOME/gtk.git
    #source-tag: '3.24.33'
    source-branch: gtk-3-24
    source-depth: 1
    plugin: meson
    meson-parameters:
      - --prefix=/usr
      - -Ddebug=true
      - -Doptimization=3
      - -Dbroadway_backend=true
      - -Dx11_backend=true
      - -Dwayland_backend=true
      - -Dwin32_backend=false
      - -Dquartz_backend=false
      - -Dxinerama=yes
      - -Dintrospection=true
      - -Dbuiltin_immodules=yes
      - -Ddemos=false
      - -Dexamples=false
    build-environment: *buildenv
    build-environment:
      - LD_LIBRARY_PATH: $SNAPCRAFT_STAGE/usr/lib/vala-0.48:$SNAPCRAFT_STAGE/usr/lib:$SNAPCRAFT_STAGE/usr/lib/$SNAPCRAFT_ARCH_TRIPLET
      - PKG_CONFIG_PATH: $SNAPCRAFT_STAGE/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/pkgconfig:$SNAPCRAFT_STAGE/usr/lib/pkgconfig:$SNAPCRAFT_STAGE/usr/share/pkgconfig
    organize:
      usr/lib/gtk-3.0: usr/lib/$SNAPCRAFT_ARCH_TRIPLET/gtk-3.0
      usr/bin/gtk-query-immodules-3.0: usr/lib/$SNAPCRAFT_ARCH_TRIPLET/libgtk-3-0/gtk-query-immodules-3.0
    build-packages:
      - libxkbcommon-dev
      - libxinerama-dev
      - libcups2-dev
      - libcolord-dev
      - libxrandr-dev
      - libxcursor-dev
      - libisocodes-dev
      - libxcomposite-dev
      - libxdamage-dev
      - libxfixes-dev
      - libxi-dev
      - libxkbfile-dev
      - libxml2-utils

  gtk-locales:
    after: [ gtk ]
    plugin: nil
    override-pull: |
      set -eux
      apt-get download "language-pack-gnome-*-base"
    override-build: |
      set -eux
      for deb in *.deb; do dpkg-deb -x $deb .; done
      find usr/share/locale-langpack -type f -not -name "gtk30*.mo" -exec rm '{}' \;
      mkdir -p $SNAPCRAFT_PART_INSTALL/usr/share
      cp -r usr/share/locale-langpack $SNAPCRAFT_PART_INSTALL/usr/share/

  mm-common:
    after: [ gtk-locales ]
    source: https://gitlab.gnome.org/GNOME/mm-common.git
    source-tag: '1.0.2'
    plugin: meson
    meson-parameters:
      - --prefix=/usr
      - -Duse-network=true
    override-build: |
      set -eux
      snapcraftctl build
    build-environment: *buildenv
    build-packages:
      - wget

  glibmm:
    after: [ mm-common ]
    source: https://gitlab.gnome.org/GNOME/glibmm.git
    source-tag: '2.64.4'
    plugin: autotools
    override-build: |
      set -eux
    
      # Make sure all of the *.am files from mm-common are found
      mkdir -p /usr/bin
      mkdir -p /usr/share/mm-common/build/
      mkdir -p /usr/share/mm-common/doctool/
      cp $SNAPCRAFT_STAGE/usr/bin/mm-common-prepare /usr/bin/mm-common-prepare
      cp $SNAPCRAFT_STAGE/usr/bin/mm-common-get /usr/bin/mm-common-get
      cp $SNAPCRAFT_STAGE/usr/share/mm-common/build/*.am /usr/share/mm-common/build/
      cp $SNAPCRAFT_STAGE/usr/share/mm-common/doctool/* /usr/share/mm-common/doctool/

      # Manual build of glibmm
      cd $SNAPCRAFT_PART_BUILD
      ./autogen.sh --prefix=/usr
      make -j8
      make install DESTDIR=$SNAPCRAFT_PART_INSTALL
    build-packages:
      - libsigc++-2.0-dev
      - libxml-parser-perl
    build-environment: *buildenv
    
  cairomm:
    after: [ glibmm ]
    source: https://gitlab.freedesktop.org/cairo/cairomm.git
    source-tag: '1.14.2'
    plugin: meson
    meson-parameters:
      - --prefix=/usr
      - -Dmaintainer-mode=false
      - -Dbuild-documentation=false
      - -Dbuild-examples=false
    build-environment: *buildenv

  pangomm:
    after: [ cairomm ]
    source: https://gitlab.gnome.org/GNOME/pangomm.git
    source-tag: '2.42.2'
    plugin: meson
    meson-parameters:
      - --prefix=/usr
      - -Dmaintainer-mode=true
      - -Dbuild-documentation=false
    build-environment:
      - ACLOCAL_PATH: $SNAPCRAFT_STAGE/usr/share/aclocal
      - XDG_DATA_DIRS: $SNAPCRAFT_STAGE/usr/share:/usr/share:$XDG_DATA_DIRS
      - LD_LIBRARY_PATH: $SNAPCRAFT_STAGE/usr/lib/vala-0.48:$LD_LIBRARY_PATH
      - GDK_PIXBUF_MODULE_FILE: $SNAPCRAFT_STAGE/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/gdk-pixbuf-2.0/2.10.0/loaders.cache
      - M4PATH: $SNAPCRAFT_STAGE/usr/lib/glibmm-2.4/proc/m4
    override-build: |
      set -eux
      mkdir -p ../src/untracked/build_scripts/
      cp -p $SNAPCRAFT_STAGE/usr/share/mm-common/build/generate-binding.py ../src/untracked/build_scripts/
      snapcraftctl build

  atkmm:
    after: [ pangomm ]
    source: https://gitlab.gnome.org/GNOME/atkmm.git
    source-tag: '2.28.0'
    plugin: autotools
    override-build: |
      set -eux
      cd $SNAPCRAFT_PART_BUILD
      ./autogen.sh --prefix=/usr
      make -j8
      make install DESTDIR=$SNAPCRAFT_PART_INSTALL
    build-environment: 
      - ACLOCAL_PATH: $SNAPCRAFT_STAGE/usr/share/aclocal
      - XDG_DATA_DIRS: $SNAPCRAFT_STAGE/usr/share:/usr/share:$XDG_DATA_DIRS
      - LD_LIBRARY_PATH: $SNAPCRAFT_STAGE/usr/lib/vala-0.48:$LD_LIBRARY_PATH
      - GDK_PIXBUF_MODULE_FILE: $SNAPCRAFT_STAGE/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/gdk-pixbuf-2.0/2.10.0/loaders.cache
      - M4PATH: $SNAPCRAFT_STAGE/usr/lib/glibmm-2.4/proc/m4

  gtkmm:
    after: [ atkmm ]
    source: https://gitlab.gnome.org/GNOME/gtkmm.git
    source-tag: '3.24.3'
    plugin: meson
    meson-parameters:
      - --prefix=/usr
      - -Dmaintainer-mode=true
      - -Dbuild-documentation=false
      - -Dbuild-demos=false
    build-environment: 
      - ACLOCAL_PATH: $SNAPCRAFT_STAGE/usr/share/aclocal
      - XDG_DATA_DIRS: $SNAPCRAFT_STAGE/usr/share:/usr/share:$XDG_DATA_DIRS
      - LD_LIBRARY_PATH: $SNAPCRAFT_STAGE/usr/lib/vala-0.48:$SNAPCRAFT_STAGE/usr/lib:$SNAPCRAFT_STAGE/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/$LD_LIBRARY_PATH
      - GDK_PIXBUF_MODULE_FILE: $SNAPCRAFT_STAGE/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/gdk-pixbuf-2.0/2.10.0/loaders.cache
      - M4PATH: $SNAPCRAFT_STAGE/usr/lib/glibmm-2.4/proc/m4
    override-build: |
      set -eux
      mkdir -p ../src/untracked/build_scripts/
      cp -p $SNAPCRAFT_STAGE/usr/share/mm-common/build/generate-binding.py ../src/untracked/build_scripts/
      snapcraftctl build

  gtksourceview:
    after: [ gtkmm ]
    source: https://gitlab.gnome.org/GNOME/gtksourceview.git
    source-branch: 'gtksourceview-4-6'
    source-depth: 1
    plugin: meson
    meson-parameters:
     - --prefix=/usr
     - -Ddebug=true
     - -Doptimization=3
    build-environment: *buildenv
    build-environment:
      - XDG_DATA_DIRS: $SNAPCRAFT_STAGE/usr/share:/usr/share:$XDG_DATA_DIRS
      - LD_LIBRARY_PATH: $SNAPCRAFT_STAGE/usr/lib/vala-0.48:$SNAPCRAFT_STAGE/usr/lib:$SNAPCRAFT_STAGE/usr/lib/$SNAPCRAFT_ARCH_TRIPLET
      - PKG_CONFIG_PATH: $SNAPCRAFT_STAGE/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/pkgconfig:$SNAPCRAFT_STAGE/usr/lib/pkgconfig:$SNAPCRAFT_STAGE/usr/share/pkgconfig
    build-packages:
      - gettext
      - libxml2-dev
    override-pull: |
      set -eux
      snapcraftctl pull
      sed -i 's#Werror=missing-include-dirs#Wmissing-include-dirs#g' meson.build

  libdazzle:
    after: [ gtksourceview ]
    source: https://gitlab.gnome.org/GNOME/libdazzle.git
    source-tag: '3.38.0'
    source-depth: 1
    plugin: meson
    meson-parameters:
     - --prefix=/usr
     - -Ddebug=true
     - -Doptimization=3
    build-environment: *buildenv
    override-pull: |
      set -eux
      snapcraftctl pull
      sed -i 's#Werror=missing-include-dirs#Wmissing-include-dirs#g' meson.build

  libcanberra:
    after: [ libdazzle ]
    source: git://git.0pointer.net/libcanberra.git
    source-depth: 1
    plugin: autotools
    autotools-configure-parameters: [ --prefix=/usr, --with-builtin=pulse ]
    build-environment: *buildenv
    build-packages:
      - libasound2-dev
      - libvorbis-dev
      - libtdb-dev
      - libpulse-dev
      - libgstreamer1.0-dev

  gsound:
    after: [ libcanberra ]
    source: https://gitlab.gnome.org/GNOME/gsound.git
    source-type: git
    plugin: meson
    meson-parameters:
     - --prefix=/usr
     - -Ddebug=true
     - -Doptimization=3
    build-environment: *buildenv

  gsettings-desktop-schemas:
    after: [ gsound ]
    source: https://gitlab.gnome.org/GNOME/gsettings-desktop-schemas.git
    source-branch: 'gnome-3-38'
    source-depth: 1
    plugin: meson
    meson-parameters:
     - --prefix=/usr
     - -Ddebug=true
     - -Doptimization=3
    build-environment: *buildenv
    override-build: |
      set -eux
      snapcraftctl build
      PC=$SNAPCRAFT_PART_INSTALL/usr/share/pkgconfig/gsettings-desktop-schemas.pc
      sed -i 's#-I/usr#-I${prefix}#' $PC

  gnome-desktop:
    after: [ gsettings-desktop-schemas ]
    source: https://gitlab.gnome.org/GNOME/gnome-desktop.git
    source-branch: 'gnome-3-38'
    source-depth: 1
    plugin: meson
    meson-parameters:
     - --prefix=/usr
     - -Ddebug=true
     - -Doptimization=3
    build-environment: *buildenv
    build-packages:
      - iso-codes
      - itstool
      - libseccomp-dev
      - libudev-dev
      - xkb-data
      - yelp-tools

  cogl:
    after: [ gnome-desktop ]
    source: https://gitlab.gnome.org/GNOME/cogl.git
    source-branch: 'cogl-1.22'
    source-depth: 1
    plugin: autotools
    autotools-configure-parameters:
      - --prefix=/usr
      - --enable-wayland-egl-platform=yes
      - --enable-kms-egl-platform=yes
      - --enable-introspection=yes
      - --enable-gdk-pixbuf
      - --enable-cogl-pango
      - --enable-gl
      - --enable-xlib-egl-platform
      - --enable-gles2
      - --with-gles2-libname=libGLESv2.so.2
    build-environment: *buildenv
    build-environment:
      - XDG_DATA_DIRS: $SNAPCRAFT_STAGE/usr/share:/usr/share:$XDG_DATA_DIRS
      - LD_LIBRARY_PATH: $SNAPCRAFT_STAGE/usr/lib/vala-0.48:$SNAPCRAFT_STAGE/usr/lib:$SNAPCRAFT_STAGE/usr/lib/$SNAPCRAFT_ARCH_TRIPLET:$LD_LIBRARY_PATH
      - PKG_CONFIG_PATH: $SNAPCRAFT_STAGE/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/pkgconfig:$SNAPCRAFT_STAGE/usr/lib/pkgconfig:$SNAPCRAFT_STAGE/usr/share/pkgconfig
    build-packages:
      - libgbm-dev
      - libgles2-mesa-dev
      - xauth
      - xvfb
      - libgstreamer-plugins-base1.0-dev

  libinput:
    after: [ cogl ]
    source: https://gitlab.freedesktop.org/libinput/libinput.git
    source-depth: 1
    plugin: meson
    meson-parameters:
      - --prefix=/usr
      - -Ddebug=true
      - -Doptimization=3
      - -Ddocumentation=false
      - -Dtests=false
    build-environment: *buildenv
    build-packages:
      - check
      - libmtdev-dev
      - libudev-dev
      - libevdev-dev
      - libwacom-dev

  clutter:
    after: [ cogl, libinput ]
    source: https://gitlab.gnome.org/GNOME/clutter.git
    source-tag: '1.26.4'
    plugin: meson
    meson-parameters:
      - --prefix=/usr
      - -Ddebug=true
      - -Doptimization=3
      - -Dbuild_examples=false
      - -Ddocumentation=false
      - -Dbuild_tests=false
      - -Dpixbuf_tests=false
    build-environment: *buildenv
    build-packages:
      - libdrm-dev
      - xsltproc
      - libgudev-1.0-dev
    stage:
      - -usr/bin/gapplication
      - -usr/bin/gdbus
      - -usr/bin/gio*
      - -usr/bin/glib*
      - -usr/bin/gobject-query
      - -usr/bin/gresource
      - -usr/bin/gsettings
      - -usr/bin/gtester*
      - -usr/include/gio-unix-2.0/gio/gdesktopappinfo.h
      - -usr/include/gio-unix-2.0/gio/gunixmounts.h
      - -usr/include/glib-2.0/*
      - -usr/include/pixman-1/*
      - -usr/lib/*/glib-2.0/*
      - -usr/lib/*/libffi*
      - -usr/lib/*/libgio*
      - -usr/lib/*/libglib*
      - -usr/lib/*/libgmodule*
      - -usr/lib/*/libgobject*
      - -usr/lib/*/libgthread*
      - -usr/lib/*/libpixman*
      - -usr/lib/*/pkgconfig/gio*
      - -usr/lib/*/pkgconfig/glib-2.0.pc
      - -usr/lib/*/pkgconfig/gmodule*
      - -usr/lib/*/pkgconfig/gobject-2.0.pc
      - -usr/lib/*/pkgconfig/gthread-2.0.pc
      - -usr/lib/*/pkgconfig/libffi.pc
      - -usr/lib/*/pkgconfig/pixman-1.pc
      - -usr/share/aclocal/glib-2.0.m4
      - -usr/share/aclocal/gsettings.m4
      - -usr/share/glib-2.0/*
      - -usr/lib/*/girepository-1.0/GIRepository-2.0.typelib
      - -usr/lib/*/girepository-1.0/GLib-2.0.typelib
      - -usr/lib/*/girepository-1.0/GObject-2.0.typelib
      - -usr/lib/*/girepository-1.0/Gio-2.0.typelib
      - -usr/lib/*/libgirepository*
      - -usr/include/fribidi/*
      - -usr/lib/*/libfribidi*
      - -usr/lib/*/pkgconfig/fribidi.pc
      - -usr/include/harfbuzz/*
      - -usr/share/gir-1.0/HarfBuzz-0.0.gir
      - -usr/bin/pango*
      - -usr/include/pango-1.0/pango/*
      - -usr/lib/*/girepository-1.0/Pango*
      - -usr/lib/*/libpango*
      - -usr/lib/*/pkgconfig/pango*
      - -usr/share/gir-1.0/Pango*
      - -usr/bin/gdk-pixbuf*
      - -usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-features.h
      - -usr/lib/*/gdk-pixbuf-2.0/*
      - -usr/lib/*/girepository-1.0/GdkPixbuf-2.0.typelib
      - -usr/lib/*/libgdk_pixbuf*
      - -usr/lib/*/pkgconfig/gdk-pixbuf*
      - -usr/share/gir-1.0/GdkPix*
      - -usr/bin/wayland-scanner
      - -usr/include/wayland*
      - -usr/share/aclocal/wayland-scanner.m4
      - -usr/share/wayland/wayland.xml

  clutter-gtk:
    after: [ clutter ]
    source: https://gitlab.gnome.org/GNOME/clutter-gtk.git
    source-tag: '1.8.4'  # ancient tag. should just build from master since it gets updates (like clutter)
    source-depth: 1
    plugin: meson
    meson-parameters:
     - --prefix=/usr
     - -Ddebug=true
     - -Doptimization=3
    build-environment: *buildenv

  libpeas:
    after: [ clutter-gtk ]
    source: https://gitlab.gnome.org/GNOME/libpeas.git
    source-tag: 'libpeas-1.28.0'
    source-depth: 1
    plugin: meson
    meson-parameters:
      - --prefix=/usr
      - -Dpython2=true
      - -Dpython3=true
      - -Dintrospection=true
      - -Dvapi=false
      - -Ddemos=true
      - -Dglade_catalog=false
      - -Dgtk_doc=false
    build-environment: *buildenv
    build-environment:
      - LD_LIBRARY_PATH: $SNAPCRAFT_STAGE/usr/lib/vala-0.48:$SNAPCRAFT_STAGE/usr/lib:$SNAPCRAFT_STAGE/usr/lib/$SNAPCRAFT_ARCH_TRIPLET
      - PKG_CONFIG_PATH: $SNAPCRAFT_STAGE/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/pkgconfig:$SNAPCRAFT_STAGE/usr/lib/pkgconfig:$SNAPCRAFT_STAGE/usr/share/pkgconfig
    build-packages:
      - python-dev
      - python-gi-dev

  pycairo:
    after: [ libpeas ]
    source: https://github.com/pygobject/pycairo.git
    source-tag: 'v1.18.1'
    source-depth: 1
    plugin: meson
    meson-parameters:
     - --prefix=/usr
     - -Ddebug=true
     - -Doptimization=3
    build-environment: *buildenv

  pygobject:
    after: [ pycairo ]
    source: https://gitlab.gnome.org/GNOME/pygobject.git
    source-branch: 'pygobject-3-36'
    source-depth: 1
    plugin: meson
    meson-parameters:
     - --prefix=/usr
     - -Ddebug=true
     - -Doptimization=3
    build-environment: *buildenv

  libhandy:
    after: [ pygobject ]
    source: https://gitlab.gnome.org/GNOME/libhandy.git
    source-branch: 'libhandy-1-2'
    source-depth: 1
    plugin: meson
    meson-parameters:
      - --prefix=/usr
      - -Ddebug=true
      - -Doptimization=3
      - -Dgtk_doc=false
      - -Dtests=false
      - -Dexamples=false
      - -Dglade_catalog=disabled
    build-environment: *buildenv

  gjs:
    after: [ libhandy ]
    source: https://gitlab.gnome.org/GNOME/gjs.git
    source-branch: 'gnome-3-36' # 3-38 requires libmozjs-78
    source-depth: 1
    plugin: meson
    meson-version: "0.54.0"
    meson-parameters:
      - --prefix=/usr
      - -Ddebug=true
      - -Doptimization=3
      - --libdir=lib
      - -Dgtk_doc=false
      - -Dtests=false
      - -Dinstalled_tests=false
    build-environment: *buildenv
    build-environment:
      - PKG_CONFIG_PATH: $SNAPCRAFT_STAGE/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/pkgconfig:$SNAPCRAFT_STAGE/usr/lib/pkgconfig:$SNAPCRAFT_STAGE/usr/share/pkgconfig:$PKG_CONFIG_PATH
      - ACLOCAL_PATH: $SNAPCRAFT_STAGE/usr/share/aclocal
      - XDG_DATA_DIRS: $SNAPCRAFT_STAGE/usr/share:/usr/share:$XDG_DATA_DIRS
      - LD_LIBRARY_PATH: $SNAPCRAFT_STAGE/usr/lib/vala-0.48:$LD_LIBRARY_PATH
    build-packages:
      - dbus
      - libmozjs-68-dev

  p11-kit:
    after: [ gjs ]
    source: https://github.com/p11-glue/p11-kit.git
    source-tag: 0.23.22
    plugin: meson
    meson-version: "0.54.0"
    meson-parameters:
      - --prefix=/usr
      - -Dhash_impl=internal
      - -Dtrust_paths=/etc/ssl/certs/ca-certificates.crt
    build-packages:
      - libtasn1-6-dev
    build-environment: *buildenv

  libsecret:
    after: [ p11-kit ]
    source: https://gitlab.gnome.org/GNOME/libsecret.git
    source-depth: 1
    source-commit: f882a03f44e30c6978d9af6772653e740c84fffd
    plugin: meson
    meson-parameters: [--prefix=/usr]
    build-packages:
      - libgcrypt20-dev
    build-environment: *buildenv

  libgnome-games-support:
    after: [ libsecret ]
    source: https://gitlab.gnome.org/GNOME/libgnome-games-support.git
    source-type: git
    source-tag: '1.8.1'
    plugin: meson
    meson-parameters: [--prefix=/usr]
    build-environment: *buildenv

  appstream:
    after: [ libgnome-games-support ]
    source: https://github.com/ximion/appstream.git
    plugin: meson
    source-tag: "v0.14.6"
    meson-parameters:
      - --prefix=/usr
      - -Dgir=false
      - -Ddocs=false
      - -Dapidocs=false
      - -Dinstall-docs=false
    build-environment: *buildenv
    build-packages:
      - gperf
      - libcurl4-gnutls-dev
      - liblmdb-dev
      - liblzma-dev
      - libstemmer-dev
      - libyaml-dev

  debs:
    after: [ appstream ]
    plugin: nil
    stage-packages:
      - appstream-util
      - desktop-file-utils
      - gcc
      - gettext
      - itstool
      - libappindicator3-dev
      - libbrotli-dev
      - libcanberra-gtk3-dev
      - libdbus-1-3
      - libdbus-1-dev
      - libdrm-dev
      - libegl-mesa0
      - libegl1-mesa-dev
      - libexpat1
      - libevdev2
      - libfontconfig1-dev
      - libgbm-dev
      - libgcr-3-dev
      - libgcrypt20
      - libgcrypt20-dev
      - libgl1-mesa-dev
      - libgmp10
      - libgnutls28-dev
      - libgnutls30
      - libgspell-1-dev
      - libgudev-1.0-dev
      - libhogweed5
      - libidn2-0
      - libjpeg-dev
      - liblcms2-dev
      - liblzo2-dev
      - libmount-dev
      - libmozjs-68-dev
      - libmtdev1
      - libnettle7
      - libnotify-dev
      - libpcre2-8-0
      - libpcre3
      - libpcre3-dev
      - libpulse0
      - libpulse-dev
      - libwrap0
      - libpython3-dev
      - libpython3.8-dev
      - libseccomp-dev
      - libseccomp2
      - libsqlite3-0
      - libsqlite3-dev
      - libtasn1-6
      - libtdb1
      - libthai-dev
      - libudev-dev
      - libudev1
      - libunity-dev
      - libvorbisfile3
      - libwacom2
      - libwebkit2gtk-4.0-dev
      - libx11-xcb-dev
      - libxcb-render0-dev
      - libxcb-shm0-dev
      - libxcomposite-dev
      - libxcursor-dev
      - libxdamage-dev
      - libxext-dev
      - libxft-dev
      - libxi-dev
      - libxinerama-dev
      - libxkbcommon-dev
      - libxml2-dev
      - libxml2-utils
      - libxrandr-dev
      - libxrender-dev
      - libxtst-dev
      - pkg-config
      - python3-dev
      - python3-distutils
      - python3-minimal
      - python3-pip
      - python3-setuptools
      - python3-venv
      - python3-wheel
      - python3.8-minimal
      - python3.8-venv
      - shared-mime-info
      - zlib1g-dev
      - liblmdb-dev
    prime:
      - -usr/lib/*/gtk-3.0/3.0.0
    override-build: |
      set -eux
      snapcraftctl build
      cd $SNAPCRAFT_STAGE/usr
      find . -type f,l -exec rm -f $SNAPCRAFT_PART_INSTALL/usr/{} \;
      find . -type f,l -name "*.so*" -exec bash -c "rm -f $SNAPCRAFT_PART_INSTALL/usr/{}*" \;
      cd $SNAPCRAFT_STAGE/usr/lib
      find . -type f,l -exec rm -f $SNAPCRAFT_PART_INSTALL/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/{} \;
      find . -type f,l -name "*.so*" -exec bash -c "rm -f $SNAPCRAFT_PART_INSTALL/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/{}*" \;
      cd $SNAPCRAFT_STAGE/usr/lib/$SNAPCRAFT_ARCH_TRIPLET
      find . -type f,l -exec rm -f $SNAPCRAFT_PART_INSTALL/usr/lib/{} \;
      find . -type f,l -name "*.so*" -exec bash -c "rm -f $SNAPCRAFT_PART_INSTALL/usr/lib/{}*" \;

  conditioning:
    after: [ debs ]
    plugin: nil
    build-environment: *buildenv
    build-packages:
      - zip
      - python3-distutils-extra
      - python3-pip
      - python3-apt
    override-prime: |
      set -eux
      snapcraftctl prime

      glib-compile-schemas usr/share/glib-2.0/schemas
      update-mime-database usr/share/mime
      for dir in usr/share/icons/*; do
        if [ -f "$dir/index.theme" ]; then
          gtk-update-icon-cache --force "$dir"
        fi
      done

      for PC in $(find . -path "*/pkgconfig/*.pc")
      do
        sed -i 's#prefix=$SNAPCRAFT_STAGE#prefix=/snap/$SNAPCRAFT_PROJECT_NAME/current#' $PC
        sed -i 's#prefix = /usr#prefix=/snap/$SNAPCRAFT_PROJECT_NAME/current/usr#' $PC
        sed -i 's#prefix=/usr#prefix=/snap/$SNAPCRAFT_PROJECT_NAME/current/usr#' $PC
        sed -i 's#original_prefix=/snap/$SNAPCRAFT_PROJECT_NAME/current/usr#original_prefix=/usr#' $PC

        sed -i 's#libdir=/usr#libdir=${prefix}#' $PC
        sed -i 's#libdir=/lib#libdir=/snap/$SNAPCRAFT_PROJECT_NAME/current/lib#' $PC

        sed -i 's#exec_prefix=/usr#exec_prefix=${prefix}#' $PC
        sed -i 's#includedir=/usr#includedir=${prefix}#' $PC
        sed -i 's#sysconfdir=/etc#sysconfdir=/snap/$SNAPCRAFT_PROJECT_NAME/current/etc#' $PC
        
        sed -i 's#/usr/#/snap/$SNAPCRAFT_PROJECT_NAME/current/usr/#g' $PC
        sed -i 's#/etc/#/snap/$SNAPCRAFT_PROJECT_NAME/current/etc/#g' $PC
      done

      sed -i 's#/usr/bin/python#python3#' usr/bin/glib-mkenums

      LIBTOOLIZE=usr/bin/libtoolize
      sed -i 's#pkgauxdir="$SNAPCRAFT_STAGE#pkgauxdir="/snap/$SNAPCRAFT_PROJECT_NAME/current#' $LIBTOOLIZE
      sed -i 's#pkgltdldir="$SNAPCRAFT_STAGE#pkgltdldir="/snap/$SNAPCRAFT_PROJECT_NAME/current#' $LIBTOOLIZE
      sed -i 's#aclocaldir="$SNAPCRAFT_STAGE#aclocaldir="/snap/$SNAPCRAFT_PROJECT_NAME/current#' $LIBTOOLIZE

      SCANNER=usr/bin/g-ir-scanner
      sed -i 's#$SNAPCRAFT_STAGE#/snap/$SNAPCRAFT_PROJECT_NAME/current#g' $SCANNER

      ITSTOOL=usr/bin/itstool
      sed -i 's#/usr/local/share#/snap/$SNAPCRAFT_PROJECT_NAME/current/usr/local/share#g' $ITSTOOL
      sed -i 's#/usr/share#/snap/$SNAPCRAFT_PROJECT_NAME/current/usr/share#g' $ITSTOOL

      LOADERS=usr/lib/$SNAPCRAFT_ARCH_TRIPLET/gdk-pixbuf-2.0/2.10.0/loaders.cache
      sed -i 's#/root/parts/gdk-pixbuf/install#/snap/$SNAPCRAFT_PROJECT_NAME/current#g' $LOADERS
      sed -i 's#/build/$SNAPCRAFT_PROJECT_NAME/parts/gdk-pixbuf/install#/snap/$SNAPCRAFT_PROJECT_NAME/current#g' $LOADERS

      XML2_CONFIG=usr/bin/xml2-config
      sed -i 's#/root/parts/debs/install#/snap/$SNAPCRAFT_PROJECT_NAME/current#g' $XML2_CONFIG

      DEBUG_BUILDID=usr/lib/debug/.build-id
      mkdir -p $DEBUG_BUILDID
      find . -type f \( -executable -or -name "*.so*" \) -print0 | xargs -0 -n 1 $SNAPCRAFT_PROJECT_DIR/debug-symbols.sh $DEBUG_BUILDID

      # this should be picked by launchpad build system
      _VERSION=$SNAPCRAFT_PROJECT_VERSION
      if [ "${_VERSION}" = "git" ]; then
        pip3 install craft-parts
        _VERSION=$(python3 -c "from craft_parts.sources.git_source import GitSource; print(GitSource.generate_version(part_src_dir='$SNAPCRAFT_PROJECT_DIR'))")
      fi
      SYMBOLS_ARCHIVE=$SNAPCRAFT_PROJECT_NAME_${_VERSION}_$SNAP_ARCH.debug
      zip -r9 $SNAPCRAFT_PROJECT_DIR/$SYMBOLS_ARCHIVE $DEBUG_BUILDID
      rm -fr $DEBUG_BUILDID/

      ln -s vala-0.48 usr/lib/vala-current
      ln -s gettext-0.19.8 usr/share/gettext-current
      ln -s gdk-pixbuf-2.0/2.10.0 usr/lib/$SNAPCRAFT_ARCH_TRIPLET/gdk-pixbuf-current


  # Used by the gnome snapcraft extensions to load translations from within the content snap
  bindtextdomain:
    after: [ conditioning ]
    plugin: nil
    override-build: |
      set -eux
      mkdir -p $SNAPCRAFT_PART_INSTALL/lib/$SNAPCRAFT_ARCH_TRIPLET
      gcc -Wall -O2 -o $SNAPCRAFT_PART_INSTALL/lib/$SNAPCRAFT_ARCH_TRIPLET/bindtextdomain.so -fPIC -shared $SNAPCRAFT_PROJECT_DIR/bindtextdomain.c -ldl

  cleanup:
    after: [ conditioning ]
    plugin: nil
    override-prime: |
      set -eux

      rm -rf usr/share/doc
      rm -rf usr/share/man
      rm -rf usr/libexec/*/installed-tests
      rm -rf usr/libexec/installed-tests
      rm -f usr/lib/*.la
      rm -f usr/lib/*/*.la

      # Cleanup from libunity addition
      rm -f usr/bin/dbus-binding-tool
      rm -f usr/bin/unity-scope-loader
      rm -rf usr/lib/python2.7
      rm -f usr/share/glib-2.0/schemas/com.canonical.Unity.Lenses.gschema.xml
      rm -rf usr/share/lintian/overrides
      rm -rf usr/share/locale-langpack/kab
      rm -f usr/share/unity/client-scopes.json

      find . -type d -empty -delete
